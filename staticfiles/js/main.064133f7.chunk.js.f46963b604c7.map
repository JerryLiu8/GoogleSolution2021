{"version":3,"sources":["components/StickyFooter.js","components/DashboardPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","minHeight","main","marginTop","spacing","marginBottom","footer","padding","backgroundColor","palette","type","grey","StickyFooter","children","classes","className","CssBaseline","Container","component","maxWidth","Typography","variant","gutterBottom","margin","width","height","table","minWidth","App","useState","currentPath","setPath","sessionRunning","setSessionRunning","counter","setCounter","placeholder","setPlaceholder","webcamRef","React","useRef","mediaRecorderRef","setCapturing","recordedChunks","setRecordedChunks","recordState","wallRepCount","setWallRepCount","lungeCount","setLungeCount","squatCount","setSquatCount","isLoading","setIsLoading","handleStartCaptureClick","useCallback","waitMultiplier","i","setTimeout","countDown","current","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","start","data","size","prev","concat","handleStopCaptureClick","stop","handleDownload","a","length","blob","Blob","formData","FormData","append","fetch","method","body","then","result","response","json","reps","wallPushupsCount","wallPushups","lunges","squats","catch","error","console","log","useEffect","res","framesNum","handleReroute","newRoute","handleSessionState","id","to","exact","path","Paper","style","textAlign","audio","ref","Button","onClick","color","TableContainer","Table","aria-label","TableHead","TableCell","align","TableBody","TableRow","scope","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.064133f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter({children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n          PhysioDash\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h3\" gutterBottom>\r\n          {`Work out summaries through video for physical therapists and home gym goers`}\r\n        </Typography>\r\n        {/* <Typography variant=\"body1\">PhysioDash.</Typography> */}\r\n        {children}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\n/*\r\nMVP\r\n1. Output rep counts\r\n2. Output graphs corresponing to rep counts\r\n3. Output workout duration\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: 'auto',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function StickyFooter({children}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\r\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n          PhysioDash\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h3\" gutterBottom>\r\n          {`Your workout summary`}\r\n        </Typography>\r\n        {children}\r\n      </Container>\r\n    </div>\r\n  );\r\n}","import React,  { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Webcam from \"react-webcam\";\r\nimport StickyFooter from \"./components/StickyFooter\"\r\nimport DashboardPage from \"./components/DashboardPage\"\r\nimport {BrowserRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Camera code: https://codepen.io/mozmorris/pen/yLYKzyp?editors=0010\r\n//something\r\nconst WebcamComponent = () => <Webcam />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n      padding: \"10px\",\r\n    },\r\n  table: {\r\n    minWidth: 650,\r\n    padding: \"10px\",\r\n  },\r\n  },\r\n}));\r\n\r\n\r\nfunction App() {\r\n  const waitTime = 5\r\n  const classes = useStyles();\r\n  const [currentPath, setPath] = useState(\"/physiodash\")\r\n  const [sessionRunning, setSessionRunning] = useState(false)\r\n  const [counter, setCounter] = useState(waitTime)\r\n\r\n  const [placeholder, setPlaceholder] = useState(\"0\")\r\n\r\n  //Webcam stuff:\r\n  const webcamRef = React.useRef(null);\r\n  const mediaRecorderRef = React.useRef(null);\r\n  const [capturing, setCapturing] = React.useState(false);\r\n  const [recordedChunks, setRecordedChunks] = React.useState([]);\r\n\r\n  const [recordState, setRecordState] = useState('/stop_record')\r\n\r\n  const [wallRepCount, setWallRepCount] = useState(0)\r\n  const [lungeCount, setLungeCount] = useState(0)\r\n  const [squatCount, setSquatCount] = useState(0)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const countDown = () =>{\r\n    let waitMultiplier = 1\r\n    for(let i =waitTime; i>0 ;i--){\r\n      setTimeout(()=>{\r\n        setCounter(i)\r\n      }, 1000*waitMultiplier)\r\n      waitMultiplier+=1\r\n    }\r\n    setTimeout(()=>{\r\n      setCounter(waitTime)\r\n    }, 1000*(waitTime+1))\r\n  }\r\n\r\n  const handleStartCaptureClick = React.useCallback(() => {\r\n    countDown();\r\n    setTimeout(()=>{\r\n      // setRecordState('/set_record')\r\n      setCapturing(true);\r\n      mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\r\n        mimeType: \"video/webm\"\r\n      });\r\n      mediaRecorderRef.current.addEventListener(\r\n        \"dataavailable\",\r\n        handleDataAvailable\r\n      );\r\n      mediaRecorderRef.current.start();\r\n    }, 1000*(waitTime+1))\r\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\r\n\r\n  const handleDataAvailable = React.useCallback(\r\n    ({ data }) => {\r\n      if (data.size > 0) {\r\n        setRecordedChunks((prev) => prev.concat(data));\r\n      }\r\n    },\r\n    [setRecordedChunks]\r\n  );\r\n\r\n  const handleStopCaptureClick = React.useCallback(() => {\r\n    // setRecordState('/stop_record')\r\n    mediaRecorderRef.current.stop();\r\n    setCapturing(false);\r\n  }, [mediaRecorderRef, webcamRef, setCapturing]);\r\n\r\n  const handleDownload = React.useCallback(async() => {\r\n    if (recordedChunks.length) {\r\n      // console.log(recordedChunks)\r\n      // recordedChunks.forEach((chunk) =>{\r\n      //   if(recordedChunks.indexOf(chunk)%10 ===0){\r\n      //     reducedChunks.push(chunk)\r\n      //     console.log(chunk)\r\n      //   }\r\n      // }) (reduce fps later...can be done thru flask end)\r\n\r\n      const blob = new Blob(recordedChunks, {\r\n        type: \"video/webm\"\r\n      });\r\n      let formData = new FormData()\r\n      formData.append(\"video\", blob)\r\n      fetch('physiodash/upload/', {method:\"POST\", body:formData}).then((result)=>{\r\n        fetch('physiodash/results/', {method:\"GET\"}).then((response) => response.json()) //2\r\n        .then((reps) => {\r\n          // console.log(reps.wallPushups); //3\r\n          // return reps.wallPushups\r\n          let wallPushupsCount = reps.wallPushups\r\n          let lungeCount = reps.lunges\r\n          let squatCount = reps.squats\r\n          setWallRepCount(wallPushupsCount)\r\n          setLungeCount(lungeCount)\r\n          setSquatCount(squatCount)\r\n          setIsLoading(false)\r\n          // console.log(wallPushupsCount)\r\n  \r\n        });\r\n      })\r\n      .catch(error =>{\r\n        console.log(error)\r\n      })\r\n      \r\n      // const url = URL.createObjectURL(blob);\r\n      // const a = document.createElement(\"a\");\r\n      // document.body.appendChild(a);\r\n      // a.style = \"display: none\";\r\n      // a.href = url;\r\n      // a.download = \"physiodash_webcam_video.webm\";\r\n      // a.click();\r\n      // window.URL.revokeObjectURL(url);\r\n      // console.log(recordedChunks)\r\n      \r\n     \r\n\r\n      // const getResults = async () =>{\r\n      //   const res = await results;\r\n      //   return res\r\n      // }\r\n      // getResults()\r\n      // console.log(wallPushupsCount)\r\n      // // const wallPushupsCount = getResults()\r\n      // setWallRepCount(wallPushupsCount)\r\n      // console.log(wallPushupsCount)\r\n\r\n      setRecordedChunks([]);\r\n    }\r\n  }, [recordedChunks]);\r\n\r\n  useEffect(()=>{\r\n    if(recordState ==='/set_record'){\r\n      fetch('/set_record').then(res => res.json()).then(data=>{\r\n          setPlaceholder(data.framesNum)\r\n      })\r\n    }else if(recordState ==='/stop_record'){\r\n      fetch('/stop_record').then(res => res.json()).then(data=>{\r\n          setPlaceholder(\"0\")\r\n      })\r\n    }\r\n  },[placeholder, recordState])\r\n\r\n\r\n\r\n  const handleReroute = (newRoute) =>{\r\n    setPath(newRoute)\r\n    handleDownload()\r\n \r\n\r\n  }\r\n\r\n  const handleSessionState = () =>{\r\n    if(!sessionRunning === true){\r\n      // fetch('/stream').then(res => res.json()).then(data=>{\r\n      //   setPlaceholder(data.result)\r\n      // })\r\n      handleStartCaptureClick()\r\n      setIsLoading(true)\r\n    }else{\r\n      // fetch('/stream').then(res => res.json()).then(data=>{\r\n      //   setPlaceholder(data.result)\r\n      // })\r\n      handleStopCaptureClick()\r\n    }\r\n    setSessionRunning(!sessionRunning)\r\n  }\r\n\r\n  const getVideo = () =>{\r\n    fetch('/').then(res => res.json()).then(data=>{\r\n      return data\r\n    })\r\n  }\r\n  const element = <h1>Hello, world</h1>;\r\n  return (\r\n    <div id='app-root'>\r\n      <Router>\r\n        <Redirect to={currentPath} />\r\n        <Switch>\r\n          <Route exact path = \"/physiodash\">\r\n            <StickyFooter>\r\n              {/* <h1>Frame Count: {placeholder}</h1> */}\r\n              {(counter !== waitTime) &&\r\n               <Paper style={{margin:\"auto\", textAlign:\"center\", width:640}}>\r\n                  <h2>{`Session starts in: ${counter}`}</h2>\r\n               </Paper>\r\n              }\r\n\r\n              {/* <Button onClick={()=>{setPath('/physiodash/summary/')}}>redirect to summary</Button> */}\r\n\r\n              <Webcam audio={false} ref={webcamRef}/>\r\n                \r\n                {sessionRunning\r\n                  ? <Button style={{padding:\"5px\"}} onClick={handleSessionState} variant=\"contained\" color=\"primary\" size=\"large\">End Session</Button>\r\n                  : <Button style={{padding:\"5px\"}} onClick={handleSessionState} variant=\"contained\" color=\"primary\" size=\"large\">Begin Session</Button>\r\n                }\r\n              {recordedChunks.length > 0 && (\r\n                <div>\r\n                  <Button style={{padding:\"5px\"}}onClick={()=>handleReroute(\"/summary\")} variant=\"contained\" color=\"secondary\" size=\"large\">View Summary</Button> \r\n                </div>\r\n              )}\r\n            </StickyFooter>\r\n          </Route>\r\n\r\n          <Route exact path =\"/summary\">\r\n            <DashboardPage>\r\n              {(isLoading === false)\r\n              \r\n              ?<TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableCell>Exercise</TableCell>\r\n                    <TableCell align=\"center\">Reps</TableCell>\r\n\r\n                  </TableHead>\r\n                  <TableBody>\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Wall Pushups\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{wallRepCount}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Squats\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{squatCount}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          Lunges\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{lungeCount}</TableCell>\r\n                      </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              : <h1>Workout Summary Loading</h1>\r\n              }\r\n              <Button style={{padding:\"5px\"}} onClick={()=>handleReroute(\"/physiodash\")} variant=\"contained\" color=\"primary\" size=\"large\">New Session</Button> \r\n              {/* <Button style={{padding:\"5px\"}} onClick={handleDownload} variant=\"contained\" color=\"secondary\" size=\"large\">Get Workout Summary</Button>  */}\r\n              {/* <Button onClick={()=>{window.location.href('physiodash/summary')}}>See my results</Button> */}\r\n            </DashboardPage>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}